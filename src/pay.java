

import com.itextpdf.text.BaseColor;
import javax.swing.JOptionPane;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.*;
import java.util.Date;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
 
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author prerna sharma
 */
public class pay extends javax.swing.JFrame {

    /**
     * Creates new form pay
     */
    public pay() {
        initComponents();
        btnyearly.setVisible(false);
        
         try{
            conn c1 = new conn();
            ResultSet rs = c1.s.executeQuery("select id from update_employee ");
            
            while(rs.next()){
                cmbemp_id.addItem(rs.getString("id"));
               
            }
        }catch(Exception ee){
           ee.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtbasic = new javax.swing.JTextField();
        txthra = new javax.swing.JTextField();
        txtda = new javax.swing.JTextField();
        txtperks = new javax.swing.JTextField();
        txtfa = new javax.swing.JTextField();
        txtpf = new javax.swing.JTextField();
        txtinc_tax = new javax.swing.JTextField();
        btnmonth = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtgross = new javax.swing.JTextField();
        txtnet = new javax.swing.JTextField();
        cmbemp_id = new javax.swing.JComboBox<String>();
        jLabel17 = new javax.swing.JLabel();
        txtemp_name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtca = new javax.swing.JTextField();
        txtdesig = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtloan = new javax.swing.JTextField();
        btnyearly = new javax.swing.JButton();
        txtmonth = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtbranch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PAY SLI P GENERATION");
        setResizable(false);
        setSize(new java.awt.Dimension(1400, 680));

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));
        jPanel1.setForeground(new java.awt.Color(0, 0, 102));
        jPanel1.setDoubleBuffered(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(1400, 680));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("EMP_ID");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DESIGNATION");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("BASIC SALARY");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("HRA");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DA");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("PERKS(INCENTIVES)");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("FA (Optional)");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setText("DEDUCTION :");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("PROVIDENT FUND (%)");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("INCOME TAX");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("MONTH");

        txthra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthraActionPerformed(evt);
            }
        });

        txtfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfaActionPerformed(evt);
            }
        });

        txtinc_tax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinc_taxActionPerformed(evt);
            }
        });

        btnmonth.setBackground(new java.awt.Color(0, 102, 255));
        btnmonth.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnmonth.setText("GENERATE MONTHLY SLIP");
        btnmonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmonthActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("GROSS SALARY :");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("NET SALARY :");

        jButton2.setBackground(new java.awt.Color(51, 153, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("CALCULATE SALARY");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cmbemp_id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[----Select emp id-----]" }));
        cmbemp_id.setOpaque(false);
        cmbemp_id.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbemp_idItemStateChanged(evt);
            }
        });
        cmbemp_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbemp_idActionPerformed(evt);
            }
        });

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("EMP_NAME");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CA (Optional)");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("LOAN (Optional)");

        btnyearly.setBackground(new java.awt.Color(0, 0, 153));
        btnyearly.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnyearly.setText("GENERATE YEARLY SLIP");
        btnyearly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnyearlyActionPerformed(evt);
            }
        });

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("BRANCH");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtca)
                        .addComponent(txtnet)
                        .addComponent(txtgross)
                        .addComponent(txtinc_tax)
                        .addComponent(txtpf)
                        .addComponent(txtfa)
                        .addComponent(txtperks)
                        .addComponent(txtda)
                        .addComponent(txthra)
                        .addComponent(txtbasic)
                        .addComponent(cmbemp_id, javax.swing.GroupLayout.Alignment.TRAILING, 0, 143, Short.MAX_VALUE)
                        .addComponent(txtdesig)
                        .addComponent(txtloan)
                        .addComponent(txtmonth))
                    .addComponent(txtemp_name, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtbranch, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnyearly, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbemp_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtemp_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtbranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdesig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbasic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtperks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtfa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(btnyearly, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtinc_tax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtloan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtgross, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtnet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1030, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbemp_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbemp_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbemp_idActionPerformed
    double basic,hra,da,perks,net,temp,ca=0,fa=0,loan=0,pf,gross,inc_tax=0.0;
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    //income tax calcultion
   
   
   
        if(cmbemp_id.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(pay.this, "Please! fill the emoloyee id field");
            cmbemp_id.grabFocus();
            return;
        }
        if(txtemp_name.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(pay.this, "Please! enter name of emp");
            txtemp_name.grabFocus();
            return;
        }
        if(txtdesig.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(pay.this, "Please! select the designation of employee");
            txtdesig.grabFocus();
            return;
        }
        if(txtbasic.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(pay.this, "Please! enter the basic salary amount of emp");
            txtbasic.grabFocus();
            return;
        }
        if(txtperks.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(pay.this, "Please! enter the perks or incentives  amount");
            txtperks.grabFocus();
            return;
        }
        if(txtmonth.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(pay.this, "Please! choose the month");
            return;   
        }
   
        if(!txtfa.getText().trim().isEmpty())
        {
            try{
                 fa=Double.parseDouble(txtfa.getText());
            }
            catch(NumberFormatException e){
                System.out.println("PLEASE! enter any valid value in festival allowance field");
                txtfa.grabFocus();
                return;
            }
        }
        if(!txtca.getText().trim().isEmpty())
        {
            try{
                ca=Double.parseDouble(txtca.getText());
            }
            catch(NumberFormatException e)
            {
                System.out.println("PLEASE! enter any valid value in ca field");
                txtfa.grabFocus();
                return;
            }
        }
         if(!txtloan.getText().trim().isEmpty())
        {
            try{
                loan=Double.parseDouble(txtca.getText());
            }
            catch(NumberFormatException e)
            {
                System.out.println("PLEASE! enter any valid value in loan field");
                txtfa.grabFocus();
                return;
            }
        }
            hra=Double.parseDouble(txthra.getText());
        da=Double.parseDouble(txtda.getText());
        pf=Double.parseDouble(txtpf.getText());
            basic=Double.parseDouble(txtbasic.getText());
           temp=(da*basic)/100;
            txtda.setText(String.valueOf(temp));
             temp=(pf*basic)/100;
              txtpf.setText(String.valueOf(temp));
               temp=(hra*basic)/100;
               txthra.setText(String.valueOf(temp));
               //da
        
        hra=Double.parseDouble(txthra.getText());
        da=Double.parseDouble(txtda.getText());
        perks=Double.parseDouble(txtperks.getText());
        pf=Double.parseDouble(txtpf.getText());
             gross=basic+hra+da+ca+perks+fa;
        txtgross.setText(String.valueOf(gross));
      temp=(gross*12);
    if(temp>500000)
    {
        
        if(temp-1000000>=0)
        {
            inc_tax=100000;
            if(temp-1000000>0)
            {
                inc_tax+=100000+((temp-1000000)/3);
            }
        }
        else
        inc_tax=(temp-500000)/5;
        
    }
    inc_tax/=12;
        txtinc_tax.setText(String.valueOf(inc_tax));     
        inc_tax=Float.parseFloat(txtinc_tax.getText());
           //da=
         
          
           
      
        net=gross-(inc_tax+pf+loan);
     
        txtnet.setText(String.valueOf(net));
        
        String id=(String)cmbemp_id.getSelectedItem();
        String  nm=txtemp_name.getText();
         String  desg=txtdesig.getText();
          String  branch=txtbranch.getText();
        String  month=txtmonth.getText();
       //double basic=Double.parseDouble(txtbasic.getText());
       // double hra=Double.parseDouble(txthra.getText());
         //double da=Double.parseDouble(txtda.getText());
          //double ca=Double.parseDouble(txtca.getText());
          // double perks=Double.parseDouble(txtperks.getText());
           // double fa=Double.parseDouble(txtfa.getText());
            // double pf=Double.parseDouble(txtpf.getText());
            //  double inc_tax=Double.parseDouble(txtinc_tax.getText());
              // double loan=Double.parseDouble(txtloan.getText());
               //// double gross=Double.parseDouble(txtgross.getText());
               //double net=Double.parseDouble(txtnet.getText());
        
        //FINDING THE NUMBER OF YEARS, EMPYLOEE HAS WORKED
                 int count=0;
                
                 try{
            conn c1 = new conn();
            ResultSet rs = c1.s.executeQuery("select * from emp_salary where id='"+id+"' ");
            
            while(rs.next()){
                
                count++;
               
            }
            count++;
            if(count>=12)
                btnyearly.setVisible(true);
        }catch(Exception ee){
           ee.printStackTrace();
        }
     String qry="insert into emp_salary values('"+id+"','"+count+"','"+nm+"','"+branch+"','"+desg+"','"+basic+"','"+hra+"','"+da+"','"+ca+"','"+perks+"','"+fa+"','"+pf+"','"+inc_tax+"','"+loan+"','"+month+"','"+gross+"','"+net+"')";
           
               try{
                conn c1 = new conn();
                 c1.s.executeUpdate(qry);
               // JOptionPane.showMessageDialog(null,"Employee salary Added");
            }catch(Exception ee){
                ee.printStackTrace();
                JOptionPane.showMessageDialog(null,"Error");
            }                  
               
               
        
        
       
        
        
        
        
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnmonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmonthActionPerformed
        // TODO add your handling code here:
        if(txtgross.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(pay.this,"Please Calculate the salary first!!");
            return;
        }
     
      //  String pdfFilename="pay slip";
  Document document = new Document();
  PdfWriter docWriter = null;
 
 // DecimalFormat df = new DecimalFormat("0.00");
  String path = "C:\\Users\\shalu\\Documents\\NetBeansProjects\\payroll_system\\pay_slip_emp"+cmbemp_id.getSelectedItem()+"_"+txtmonth.getText();
  try {
   //special font sizes
   Font bfBold12 = new Font(FontFamily.TIMES_ROMAN, 8, Font.BOLD, new BaseColor(0, 0, 0)); 
   Font bf12 = new Font(FontFamily.TIMES_ROMAN, 8); 
   Font blue = new Font(FontFamily.TIMES_ROMAN, 14, Font.BOLD,BaseColor.BLUE); 
 
   //file path
  
   docWriter = PdfWriter.getInstance(document , new FileOutputStream(path));
   //document header attributes
   document.setPageSize(PageSize.A4);
   
   //open document
   document.open();
 
   //create a paragraph
   
   
  Paragraph paragraph = new Paragraph("                                                    INSPIRATION NATIONAL BANK                                                         ",blue);
   //specify column widths
   float[] columnWidths1 = {5f,5f,5f,5f};
   //create PDF table with the given widths
   PdfPTable table1 = new PdfPTable(columnWidths1);
   // set table width a percentage of the page width
   table1.setWidthPercentage(100f);
   insertCell(table1, "Employee Name", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,txtemp_name.getText() , Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "Email Id", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "phalan.dikhana@gamil.com", Element.ALIGN_LEFT, 1,bf12);
   
   insertCell(table1, "Employee Id", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,String.valueOf(cmbemp_id.getSelectedItem()), Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "Phone NO.", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "1234567890", Element.ALIGN_LEFT, 1, bf12);
   
   insertCell(table1, "Designation", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,String.valueOf(txtdesig.getText()), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table1,"BAnk A/C no.", Element.ALIGN_LEFT, 1, bf12);
     insertCell(table1,"Velle National Bank", Element.ALIGN_LEFT, 1, bf12);
     
      insertCell(table1, "Department", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,"any----", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "location", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "--------", Element.ALIGN_LEFT, 1, bf12);
   
    insertCell(table1, "Branch", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,"--------------", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, " ", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, " ", Element.ALIGN_LEFT, 1, bf12);
     
      insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
       insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
        insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
         insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
         
   float[] columnWidths2 = {5f,5f,5f,5f};
   //insert column headings
    PdfPTable table2 = new PdfPTable(columnWidths2);
    table2.setWidthPercentage(100f);
     insertCell(table2, "Earnings", Element.ALIGN_LEFT, 1, bfBold12);
   insertCell(table2, "Amount (Rs.)", Element.ALIGN_LEFT, 1, bfBold12);
    insertCell(table2, "Deduction", Element.ALIGN_LEFT, 1, bfBold12);
     insertCell(table2, "Amount (Rs.)", Element.ALIGN_LEFT, 1, bfBold12);
   table2.setHeaderRows(1);
 
   //insert an empty row
   //create section heading by cell merging

    insertCell(table2,"BASIC SALARY", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(basic), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"PROVIDENT FUND", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(pf), Element.ALIGN_LEFT, 1, bf12);
   
   
    insertCell(table2,"HOUSE RENT ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(hra), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"INCOME TAX", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(inc_tax), Element.ALIGN_LEFT, 1, bf12);
    
    insertCell(table2,"DEARNENCE ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(da), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"LOAN ", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(loan), Element.ALIGN_LEFT, 1, bf12);
    
    
     insertCell(table2,"CONVEYENCE ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(ca), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    
    insertCell(table2,"PERKS/INCENTIVES", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(perks), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    
    insertCell(table2,"FESTIVAL ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(fa), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    
 

   
   
     
      insertCell(table2,"TOTAL EARNINGS", Element.ALIGN_LEFT, 1, bfBold12);
    insertCell(table2,String.valueOf(gross), Element.ALIGN_LEFT, 1, bfBold12);
    insertCell(table2,"TOTAL DEDUCTION", Element.ALIGN_LEFT, 1, bfBold12);
     insertCell(table2,String.valueOf(pf+loan+inc_tax), Element.ALIGN_LEFT, 1, bf12);
     
      insertCell(table2,"", Element.ALIGN_LEFT, 1, bfBold12);
     insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
     insertCell(table2,"", Element.ALIGN_LEFT, 1, bfBold12);
     insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
     
     float[] columnWidths3 = {10f,10f};
     PdfPTable table3 = new PdfPTable(columnWidths3);
      table3.setWidthPercentage(100f);
       insertCell(table1, "", Element.ALIGN_LEFT, 1, bfBold12);
      insertCell(table3,"NET PAY",Element.ALIGN_LEFT, 1, bfBold12);
         insertCell(table3,String.valueOf(net),Element.ALIGN_LEFT, 1, bf12);
         
            insertCell(table3,"MODE OF PAYMENT",Element.ALIGN_LEFT, 1, bfBold12);
               insertCell(table3,"BANK TRANSFER",Element.ALIGN_LEFT, 1, bf12); 
     
    
     
               paragraph.add(table1);
               paragraph.add(table2);
               paragraph.add(table3);
               document.add(paragraph);
               JOptionPane.showMessageDialog(pay.this, "PDF COPY OF THIS SLIP HAS BEEN GENERATED");
   //add the PDF table to the paragraph 
   // add the paragraph to the document
  }
  catch (DocumentException dex)
  {
   dex.printStackTrace();
  }
  catch (Exception ex)
  {
   ex.printStackTrace();
  }
  finally
  {
   if (document!= null){
    //close the document
    document.close();
   }
   if (docWriter != null){
    //close the writer
    docWriter.close();
   }
  }
   try{
      Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+path);
                   
               }catch(Exception e)
               {
                   JOptionPane.showMessageDialog(pay.this, "PAY SLIP HAS NOT BEEN GENERATED YET");
               }
  
   }
 private void insertCell(PdfPTable table, String text, int align, int colspan, Font font){
   
  //create a new cell with the specified Text and Font
  PdfPCell cell = new PdfPCell(new Phrase(text.trim(), font));
  //set the cell alignment
  cell.setHorizontalAlignment(align);
  //set the cell column span in case you want to merge two or more cells
  cell.setColspan(colspan);
  //in case there is no text and you wan to create an empty row
  if(text.trim().equalsIgnoreCase("")){
   cell.setMinimumHeight(10f);
  }
  //add the call to the table
  table.addCell(cell);
    }//GEN-LAST:event_btnmonthActionPerformed

    private void txthraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthraActionPerformed

    private void btnyearlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnyearlyActionPerformed
        // TODO add your handling code here:
        String path = "C:\\Users\\shalu\\Documents\\NetBeansProjects\\payroll_system\\pay_slip_emp_yearly"+cmbemp_id.getSelectedItem()+"_"+txtmonth.getText();

            
               Document document = new Document();
                 PdfWriter docWriter = null;
                  try {
   //special font sizes
   Font bfBold12 = new Font(FontFamily.TIMES_ROMAN, 8, Font.BOLD, new BaseColor(0, 0, 0)); 
   Font bf12 = new Font(FontFamily.TIMES_ROMAN, 8); 
   Font blue = new Font(FontFamily.TIMES_ROMAN, 14, Font.BOLD,BaseColor.BLUE); 
 
   //file path

   docWriter = PdfWriter.getInstance(document , new FileOutputStream(path));
   //document header attributes
   document.setPageSize(PageSize.A4);
   
   //open document
   document.open();
 
   //create a paragraph
   
   
  Paragraph paragraph = new Paragraph("                                                INSPIRATION NATIONAL BANK                                                         ",blue);
   //specify column widths
   float[] columnWidths1 = {5f,5f,5f,5f};
   //create PDF table with the given widths
   PdfPTable table1 = new PdfPTable(columnWidths1);
   // set table width a percentage of the page width
   table1.setWidthPercentage(100f);
   insertCell(table1, "Employee Name", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,txtemp_name.getText() , Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "Email Id", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "phalan.dikhana@gamil.com", Element.ALIGN_LEFT, 1,bf12);
   
   insertCell(table1, "Employee Id", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,String.valueOf(cmbemp_id.getSelectedItem()), Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "Phone NO.", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "1234567890", Element.ALIGN_LEFT, 1, bf12);
   
   insertCell(table1, "Designation", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,String.valueOf(txtdesig.getText()), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table1,"BAnk A/C no.", Element.ALIGN_LEFT, 1, bf12);
     insertCell(table1,"Velle National Bank", Element.ALIGN_LEFT, 1, bf12);
     
      insertCell(table1, "Department", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,"any----", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "location", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, "--------", Element.ALIGN_LEFT, 1, bf12);
   
    insertCell(table1, "branch", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1,"--------------", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, " ", Element.ALIGN_LEFT, 1, bf12);
   insertCell(table1, " ", Element.ALIGN_LEFT, 1, bf12);
     
      insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
       insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
        insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
         insertCell(table1, "", Element.ALIGN_LEFT, 1, bf12);
         
   float[] columnWidths2 = {5f,5f,5f,5f};
   //insert column headings
    PdfPTable table2 = new PdfPTable(columnWidths2);
    table2.setWidthPercentage(100f);
     insertCell(table2, "Earnings", Element.ALIGN_LEFT, 1, bfBold12);
   insertCell(table2, "Amount (Rs.)", Element.ALIGN_LEFT, 1, bfBold12);
    insertCell(table2, "Deduction", Element.ALIGN_LEFT, 1, bfBold12);
     insertCell(table2, "Amount (Rs.)", Element.ALIGN_LEFT, 1, bfBold12);
   table2.setHeaderRows(1);
 
   //insert an empty row
   //create section heading by cell merging
   
    temp=(pf*12);
   temp=2*temp;
   temp+=(temp*7)/100;
    insertCell(table2,"BASIC SALARY", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(basic*12), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"PROVIDENT FUND ACCUMULATED SO FAR", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(temp), Element.ALIGN_LEFT, 1, bf12);
   
   
    insertCell(table2,"HOUSE RENT ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(hra*12), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"INCOME TAX", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(inc_tax*12), Element.ALIGN_LEFT, 1, bf12);
    
    insertCell(table2,"DEARNENCE ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(da*12), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    
    
     insertCell(table2,"CONVEYENCE ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(ca*12), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    
    insertCell(table2,"PERKS/INCENTIVES", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(perks*12), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    
    insertCell(table2,"FESTIVAL ALLOWANCE", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,String.valueOf(fa), Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
    insertCell(table2,"", Element.ALIGN_LEFT, 1, bf12);
     float[] columnWidths3 = {10f,10f};
     PdfPTable table3 = new PdfPTable(columnWidths3);
      table3.setWidthPercentage(100f);
 insertCell(table3,"CTC", Element.ALIGN_LEFT, 1, bfBold12);
    insertCell(table3,String.valueOf((12*basic)+(12*hra)+(12*da)+(ca*12)+(perks*12)+fa+temp-(12*inc_tax)-(12*pf)-(12*loan)), Element.ALIGN_LEFT, 1, bf12);
    
   
               paragraph.add(table1);
               paragraph.add(table2);
               paragraph.add(table3);
               document.add(paragraph);
               JOptionPane.showMessageDialog(pay.this, "PDF COPY OF THIS SLIP HAS BEEN GENERATED");
               //opening the pdf 
              
   //add the PDF table to the paragraph 
   // add the paragraph to the document
  }
  catch (DocumentException dex)
  {
   dex.printStackTrace();
  }
  catch (Exception ex)
  {
   ex.printStackTrace();
  }
  finally
  {
   if (document!= null){
    //close the document
    document.close();
   }
   if (docWriter != null){
    //close the writer
    docWriter.close();
   }
  }
                  try
                  {
                        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+path);
                   
               }catch(Exception e)
               {
                   JOptionPane.showMessageDialog(pay.this, "PAY SLIP HAS NOT BEEN GENERATED YET");
               }
                  
        
    }//GEN-LAST:event_btnyearlyActionPerformed

    private void cmbemp_idItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbemp_idItemStateChanged
        // TODO add your handling code here:
        String b,d,xx;
        b=" ";
        Calendar cal=Calendar.getInstance();
   String month=new SimpleDateFormat("MMM").format(cal.getTime());
   txtmonth.setText(month);
         try
         {
             
            conn c1 = new conn();
            ResultSet rs = c1.s.executeQuery("select * from update_employee where id='"+(String)cmbemp_id.getSelectedItem()+"'");
            
            if(rs.next()){
                txtemp_name.setText(rs.getString("name"));
               
             txtdesig.setText(rs.getString("desg"));
              txtbranch.setText(rs.getString("branch"));
             d=rs.getString("desg");
               b=rs.getString("branch");
               
            }
              rs = c1.s.executeQuery("select * from update_salary where desg='"+(String)txtdesig.getText()+ "' and branch='"+b+"'" );
             
              if(rs.next()){
                txtbasic.setText(rs.getString("bs"));
                txtda.setText(rs.getString("da"));
               txtperks.setText(rs.getString("perks"));
               txtbasic.setText(rs.getString("bs"));
               txtpf.setText(rs.getString("pf"));
                xx=b;
                if(xx.equals("Bengaluru")||xx.equals("New Delhi")||xx.equals("Kolkata")||xx.equals("Mumbai"))
                txthra.setText(rs.getString("mhra"));
                else if(xx.equals("Lucknow")||xx.equals("Patna")||xx.equals("Raipur")||xx.equals("Ranchi"))
                txthra.setText(rs.getString("chra"));
                 else
                 txthra.setText(rs.getString("rhra"));   
             
               
            }
             
             
             
        }catch(Exception ee){
           ee.printStackTrace();
        }
    }//GEN-LAST:event_cmbemp_idItemStateChanged

    private void txtfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfaActionPerformed

    private void txtinc_taxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinc_taxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtinc_taxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmonth;
    private javax.swing.JButton btnyearly;
    private javax.swing.JComboBox<String> cmbemp_id;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtbasic;
    private javax.swing.JTextField txtbranch;
    private javax.swing.JTextField txtca;
    private javax.swing.JTextField txtda;
    private javax.swing.JTextField txtdesig;
    private javax.swing.JTextField txtemp_name;
    private javax.swing.JTextField txtfa;
    private javax.swing.JTextField txtgross;
    private javax.swing.JTextField txthra;
    private javax.swing.JTextField txtinc_tax;
    private javax.swing.JTextField txtloan;
    private javax.swing.JTextField txtmonth;
    private javax.swing.JTextField txtnet;
    private javax.swing.JTextField txtperks;
    private javax.swing.JTextField txtpf;
    // End of variables declaration//GEN-END:variables
}
